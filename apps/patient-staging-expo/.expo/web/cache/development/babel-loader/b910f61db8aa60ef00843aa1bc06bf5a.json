{"ast":null,"code":"import React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Calendar(props) {\n  props.setTime(\"helllo\");\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      numColumns: 7,\n      data: props.data,\n      horizontal: false,\n      renderItem: function renderItem(test) {\n        return _jsxs(View, {\n          style: styles.calendar,\n          children: [_jsxs(Text, {\n            style: styles.jour,\n            children: [\" \", test.item.dayOfTheWeek, \" \"]\n          }), _jsxs(Text, {\n            style: styles.date,\n            children: [\" \", test.item.dayMonth, \" \"]\n          }), _jsx(Availabilities, {\n            data: test.item.timeIntervals,\n            setTime: props.setTime\n          })]\n        });\n      }\n    })\n  });\n}\n\nfunction Availabilities(props) {\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: props.data,\n      horizontal: false,\n      contentContainerStyle: {\n        \"height\": \"32px\",\n        \"margin\": \"4px\"\n      },\n      renderItem: function renderItem(test) {\n        if (test.item == '-') {\n          return _jsx(View, {\n            style: styles.optionContainer,\n            children: _jsxs(Text, {\n              style: styles.nobooking,\n              children: [\" \", test.item, \" \"]\n            })\n          });\n        } else {\n          props.setTime('hello');\n          console.log(setSelectedTime);\n          return _jsx(View, {\n            style: styles.optionContainer,\n            children: _jsx(Button, {\n              variant: \"text\",\n              title: test.item,\n              style: styles.buttonStyle,\n              onClick: function onClick() {\n                setSelectedTime(test.item);\n              },\n              children: \" \"\n            })\n          });\n        }\n      }\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  date: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: \"#333\",\n    padding: 0\n  },\n  jour: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0\n  },\n  nobooking: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0\n  },\n  calendar: {\n    fontFamily: \"sans-serif\",\n    fontSize: \"12\"\n  },\n  buttonStyle: {},\n  optionContainer: {\n    \"height\": \"20\"\n  }\n});","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/components/Calendar.js"],"names":["React","Component","useState","useEffect","Item","Calendar","props","setTime","data","test","styles","calendar","jour","item","dayOfTheWeek","date","dayMonth","timeIntervals","Availabilities","optionContainer","nobooking","console","log","setSelectedTime","buttonStyle","StyleSheet","create","backgroundColor","borderWidth","borderColor","padding","borderBottomColor","fontFamily","fontSize"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;SAMEC,I;;;;;;AAQF,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtCA,EAAAA,KAAK,CAACC,OAAN,CAAc,QAAd;AACE,SACE,KAAC,IAAD;AAAA,cACA,KAAC,QAAD;AACA,MAAA,UAAU,EAAE,CADZ;AAEA,MAAA,IAAI,EAAID,KAAK,CAACE,IAFd;AAGA,MAAA,UAAU,EAAE,KAHZ;AAIA,MAAA,UAAU,EAAE,oBAACC,IAAD,EAAU;AACpB,eACA,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA,qBACA,MAAC,IAAD;AAAM,YAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA,4BAA4BH,IAAI,CAACI,IAAL,CAAUC,YAAtC;AAAA,YADA,EAEA,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA,4BAA4BN,IAAI,CAACI,IAAL,CAAUG,QAAtC;AAAA,YAFA,EAGA,KAAC,cAAD;AAAgB,YAAA,IAAI,EAAEP,IAAI,CAACI,IAAL,CAAUI,aAAhC;AAA+C,YAAA,OAAO,EAAEX,KAAK,CAACC;AAA9D,YAHA;AAAA,UADA;AAOD;AAZD;AADA,IADF;AAkBH;;AAED,SAASW,cAAT,CAAwBZ,KAAxB,EAA+B;AAC7B,SACE,KAAC,IAAD;AAAA,cACA,KAAC,QAAD;AACA,MAAA,IAAI,EAAEA,KAAK,CAACE,IADZ;AAEA,MAAA,UAAU,EAAE,KAFZ;AAGA,MAAA,qBAAqB,EAAE;AAAC,kBAAU,MAAX;AAAmB,kBAAU;AAA7B,OAHvB;AAIA,MAAA,UAAU,EAAE,oBAACC,IAAD,EAAU;AACpB,YAAIA,IAAI,CAACI,IAAL,IAAa,GAAjB,EAAsB;AACpB,iBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACS,eAApB;AAAA,sBACE,MAAC,IAAD;AAAM,cAAA,KAAK,EAAET,MAAM,CAACU,SAApB;AAAA,8BAAiCX,IAAI,CAACI,IAAtC;AAAA;AADF,YADF;AAKD,SAND,MAOK;AAGHP,UAAAA,KAAK,CAACC,OAAN,CAAc,OAAd;AACAc,UAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AACA,iBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEb,MAAM,CAACS,eAApB;AAAA,sBACA,KAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,MAAhB;AAAuB,cAAA,KAAK,EAAEV,IAAI,CAACI,IAAnC;AAAyC,cAAA,KAAK,EAAEH,MAAM,CAACc,WAAvD;AAAoE,cAAA,OAAO,EAAE,mBAAM;AAACD,gBAAAA,eAAe,CAACd,IAAI,CAACI,IAAN,CAAf;AAA2B,eAA/G;AAAA;AAAA;AADA,YADF;AAKD;AACF;AAvBD;AADA,IADF;AA8BD;;AAED,IAAMH,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJC,IAAAA,WAAW,EAAE,MAHT;AAIJC,IAAAA,OAAO,EAAE;AAJL,GADyB;AAO/BlB,EAAAA,IAAI,EAAE;AACJe,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJG,IAAAA,iBAAiB,EAAE,KAHf;AAIJF,IAAAA,WAAW,EAAE,MAJT;AAKJC,IAAAA,OAAO,EAAE;AALL,GAPyB;AAc/BV,EAAAA,SAAS,EAAE;AACTO,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGTG,IAAAA,iBAAiB,EAAE,KAHV;AAITF,IAAAA,WAAW,EAAE,MAJJ;AAKTC,IAAAA,OAAO,EAAE;AALA,GAdoB;AAqB/BnB,EAAAA,QAAQ,EAAE;AACRqB,IAAAA,UAAU,EAAE,YADJ;AAERC,IAAAA,QAAQ,EAAE;AAFF,GArBqB;AAyB/BT,EAAAA,WAAW,EAAE,EAzBkB;AA4B/BL,EAAAA,eAAe,EAAE;AACf,cAAU;AADK;AA5Bc,CAAlB,CAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport {\n  View,\n  Platform,\n  TextInput,\n  FlatList,\n  Item,\n  Text,\n  StyleSheet,\n  Button\n} from 'react-native';\n\n// API CALL\n\nexport default function Calendar(props) {\n  props.setTime(\"helllo\")\n    return (\n      <View>\n      <FlatList\n      numColumns={7}\n      data = {props.data}\n      horizontal={false}\n      renderItem={(test) => {\n        return (\n        <View style={styles.calendar}>\n        <Text style={styles.jour}> {test.item.dayOfTheWeek} </Text>\n        <Text style={styles.date}> {test.item.dayMonth} </Text>\n        <Availabilities data={test.item.timeIntervals} setTime={props.setTime}/>\n        </View>\n        )\n      }}\n      />\n      </View>\n      )\n}\n\nfunction Availabilities(props) {\n  return (\n    <View>\n    <FlatList\n    data={props.data}\n    horizontal={false}\n    contentContainerStyle={{\"height\": \"32px\", \"margin\": \"4px\"}}\n    renderItem={(test) => {\n      if (test.item == '-') {\n        return (\n          <View style={styles.optionContainer}>\n            <Text style={styles.nobooking}> {test.item} </Text>\n          </View>\n        )\n      }\n      else {\n        //const setSelectedTime = props.setTime;\n        //setSelectedTime('hello')\n        props.setTime('hello');\n        console.log(setSelectedTime);\n        return (\n          <View style={styles.optionContainer}>\n          <Button variant=\"text\" title={test.item} style={styles.buttonStyle} onClick={() => {setSelectedTime(test.item)}}> </Button>\n          </View>\n        )\n      }\n    }}\n    >\n    </FlatList>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  date: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: \"#333\",\n    padding: 0,\n  },\n  jour: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n  },\n  nobooking: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n  },\n  calendar: {\n    fontFamily: \"sans-serif\",\n    fontSize: \"12\"\n  },\n  buttonStyle: {\n\n  },\n  optionContainer: {\n    \"height\": \"20\"\n  },\n});"]},"metadata":{},"sourceType":"module"}