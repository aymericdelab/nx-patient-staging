{"ast":null,"code":"var fetch = require(\"node-fetch\");\n\nvar determineInterval = function determineInterval(startTime, endTime) {\n  var timeIntervalsArray = [];\n\n  while (startTime < endTime) {\n    timeIntervalsArray.push(FormatHourMinutes(startTime));\n    startTime.setMinutes(startTime.getMinutes() + 30);\n  }\n\n  return timeIntervalsArray;\n};\n\nvar FormatHourMinutes = function FormatHourMinutes(time) {\n  var newMinutes = (time.getMinutes() < 10 ? '0' : '') + time.getMinutes().toString();\n  var formattedTime = time.getHours().toString() + ':' + newMinutes;\n  return formattedTime;\n};\n\nvar parseTime = function parseTime(time) {\n  return new Date(Date.parse(time));\n};\n\nvar processDates = function processDates(response) {\n  var newArray = [];\n\n  for (var i = 0; i < response.length; i++) {\n    var startTime = parseTime(response[i]['startAt']);\n    var endTime = parseTime(response[i]['endAt']);\n    newArray.push({\n      'day': response[i]['day'],\n      'month': response[i]['month'],\n      'year': response[i]['year'],\n      'dayOfTheWeek': response[i]['dayOfTheWeek'],\n      'start': startTime,\n      'end': endTime,\n      'timeIntervals': determineInterval(startTime, endTime)\n    });\n  }\n\n  ;\n  return newArray;\n};\n\nvar motiveIdDict = {\n  'technical': '61eea350ddf6c500149ae2cb',\n  'cultural': '61eea367ddf6c500149ae2cc',\n  'introduction': '61379ba159d4940022b6c929'\n};\nexport var defaultQueryArgs = {\n  \"from\": '2022-02-07T23:00:00.000Z',\n  \"to\": '2022-02-16T23:00:00.000Z',\n  \"is_new_patient\": \"true\",\n  \"motive_id\": motiveIdDict['technical']\n};\nexport default function getAgenda(queryArgs) {\n  var query = \"https://staging-api.rosa.be/api/availabilities?from=\" + queryArgs['from'] + \"&to=\" + queryArgs['to'] + \"&motive_id=\" + queryArgs['motive_id'] + \"&is_new_patient=\" + queryArgs['is_new_patient'] + \"&calendar_ids=61379ba159d4940022b6c928&state=open\";\n  return fetch(query).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return processDates(json);\n  }).then(function (processedJson) {\n    console.log(processedJson);\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n;","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/network/calendarAPI.js"],"names":["fetch","require","determineInterval","startTime","endTime","timeIntervalsArray","push","FormatHourMinutes","setMinutes","getMinutes","time","newMinutes","toString","formattedTime","getHours","parseTime","Date","parse","processDates","response","newArray","i","length","motiveIdDict","defaultQueryArgs","getAgenda","queryArgs","query","then","json","processedJson","console","log","catch","error"],"mappings":"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","sourcesContent":["var fetch = require(\"node-fetch\");\n\nconst determineInterval = (startTime, endTime) => {\n    let timeIntervalsArray = [];\n    while(startTime < endTime) {\n        timeIntervalsArray.push(FormatHourMinutes(startTime));\n        startTime.setMinutes(startTime.getMinutes() + 30);\n    }\n    return timeIntervalsArray;\n}\n\nconst FormatHourMinutes = (time) => {\n    const newMinutes = (time.getMinutes() < 10? '0':'') + time.getMinutes().toString()\n    const formattedTime = time.getHours().toString() + ':' + newMinutes\n    return formattedTime\n}\n\nconst parseTime = (time) => {\n    return new Date((Date.parse(time)));\n}\n\nconst processDates = (response) => {\n    let newArray = [];\n    for (let i=0; i<response.length; i++) {\n        const startTime = parseTime(response[i]['startAt'])\n        const endTime = parseTime(response[i]['endAt'])\n        newArray.push({\n            'day': response[i]['day'],\n            'month': response[i]['month'],\n            'year': response[i]['year'],\n            'dayOfTheWeek': response[i]['dayOfTheWeek'],\n            'start': startTime,\n            'end': endTime,\n            'timeIntervals': determineInterval(startTime, endTime)\n        })\n    };\n    return newArray;\n}\n\nconst motiveIdDict = {\n    'technical' : '61eea350ddf6c500149ae2cb',\n    'cultural' : '61eea367ddf6c500149ae2cc',\n    'introduction' : '61379ba159d4940022b6c929',\n}\n\nexport const defaultQueryArgs = {\n    \"from\": '2022-02-07T23:00:00.000Z',\n    \"to\": '2022-02-16T23:00:00.000Z',\n    \"is_new_patient\": \"true\",\n    \"motive_id\": motiveIdDict['technical'],\n}\n\nexport default function getAgenda(queryArgs) {\n    const query = `https://staging-api.rosa.be/api/availabilities?from=${queryArgs['from']}&to=${queryArgs['to']}&motive_id=${queryArgs['motive_id']}&is_new_patient=${queryArgs['is_new_patient']}&calendar_ids=61379ba159d4940022b6c928&state=open`\n    return fetch(query)\n    .then((response) => response.json())\n    .then((json) => processDates(json))\n    .then((processedJson) => {console.log(processedJson)})\n    .catch((error) => {\n        console.log(error);\n    });\n};\n\n//test1 = getAgenda(queryArgs);\n\n//let response = '[{\"_id\":\"62026542fe7f580012fd6863\",\"eventIds\":[],\"motiveIds\":[\"61379ba159d4940022b6c929\",\"61eea350ddf6c500149ae2cb\",\"61eea367ddf6c500149ae2cc\"],\"state\":\"open\",\"dayOfTheWeek\":1,\"day\":21,\"month\":1,\"year\":2022,\"appointmentSlotId\":\"61fa4379723811001bbe0bc2\",\"startAt\":\"2022-02-21T08:30:00.000Z\",\"endAt\":\"2022-02-21T16:00:00.000Z\",\"duration\":450,\"calendarId\":\"61379ba159d4940022b6c928\",\"meridiem\":\"am\",\"nextAvailabilityId\":\"61fa4379723811001bbe0bc4\",\"__v\":0,\"createdAt\":\"2022-02-08T12:42:42.346Z\",\"updatedAt\":\"2022-02-08T12:42:42.346Z\",\"id\":\"62026542fe7f580012fd6863\"},{\"_id\":\"62026542fe7f580012fd6864\",\"eventIds\":[],\"motiveIds\":[\"61379ba159d4940022b6c929\",\"61eea367ddf6c500149ae2cc\"],\"state\":\"open\",\"dayOfTheWeek\":1,\"day\":21,\"month\":1,\"year\":2022,\"appointmentSlotId\":\"61fa4379723811001bbe0bc2\",\"startAt\":\"2022-02-21T17:15:00.000Z\",\"endAt\":\"2022-02-21T18:00:00.000Z\",\"duration\":45,\"calendarId\":\"61379ba159d4940022b6c928\",\"meridiem\":\"am\",\"previousAvailabilityId\":\"61fa4379723811001bbe0bc4\",\"__v\":0,\"createdAt\":\"2022-02-08T12:42:42.346Z\",\"updatedAt\":\"2022-02-08T12:42:42.346Z\",\"id\":\"62026542fe7f580012fd6864\"},{\"_id\":\"61fa4389fe7f580012fc6dc2\",\"eventIds\":[],\"motiveIds\":[\"61379ba159d4940022b6c929\",\"61eea350ddf6c500149ae2cb\",\"61eea367ddf6c500149ae2cc\"],\"state\":\"open\",\"meridiem\":\"am\",\"previousAvailabilityId\":null,\"nextAvailabilityId\":null,\"calendarId\":\"61379ba159d4940022b6c928\",\"appointmentSlotId\":\"61fa4389fe7f580012fc6dc0\",\"startAt\":\"2022-02-22T08:30:00.000Z\",\"endAt\":\"2022-02-22T18:00:00.000Z\",\"duration\":570,\"day\":22,\"month\":1,\"year\":2022,\"dayOfTheWeek\":2,\"__v\":0,\"createdAt\":\"2022-02-02T08:40:41.315Z\",\"updatedAt\":\"2022-02-02T08:40:41.315Z\",\"id\":\"61fa4389fe7f580012fc6dc2\"},{\"_id\":\"61fa43a0fe7f580012fc6dca\",\"eventIds\":[],\"motiveIds\":[\"61379ba159d4940022b6c929\",\"61eea350ddf6c500149ae2cb\",\"61eea367ddf6c500149ae2cc\"],\"state\":\"open\",\"meridiem\":\"pm\",\"previousAvailabilityId\":null,\"nextAvailabilityId\":null,\"calendarId\":\"61379ba159d4940022b6c928\",\"appointmentSlotId\":\"61fa43a0fe7f580012fc6dc8\",\"startAt\":\"2022-02-24T13:00:00.000Z\",\"endAt\":\"2022-02-24T18:00:00.000Z\",\"duration\":300,\"day\":24,\"month\":1,\"year\":2022,\"dayOfTheWeek\":4,\"__v\":0,\"createdAt\":\"2022-02-02T08:41:04.802Z\",\"updatedAt\":\"2022-02-02T08:41:04.802Z\",\"id\":\"61fa43a0fe7f580012fc6dca\"}]'\n//response = JSON.parse(response)\n"]},"metadata":{},"sourceType":"module"}