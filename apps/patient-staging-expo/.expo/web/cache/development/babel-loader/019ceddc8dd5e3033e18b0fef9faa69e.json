{"ast":null,"code":"import React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FirstRdv(props) {\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \" Is this your first appointment with this practitioner?\"\n    }), _jsx(Appointment, {\n      style: styles.container,\n      useFirst: props.useFirst,\n      setFirst: props.setFirst\n    })]\n  });\n}\n;\n\nfunction Appointment(props) {\n  var updateYesClick = function updateYesClick() {\n    return setSelection(true);\n  };\n\n  var updateNoClick = function updateNoClick() {\n    return setSelection(false);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: [styles.smallContainer, {\n        \"float\": \"left\"\n      }],\n      children: _jsxs(View, {\n        style: [styles.smallerContainer],\n        children: [_jsx(CheckBox, {\n          style: [styles.checkBoxStyle, {\n            \"float\": \"left\"\n          }],\n          value: useSelection ? true : false,\n          onClick: updateYesClick\n        }), _jsx(Text, {\n          style: [{\n            \"float\": \"right\"\n          }],\n          children: \" Yes \"\n        })]\n      })\n    }), _jsx(View, {\n      style: [styles.smallContainer, {\n        \"float\": \"left\"\n      }],\n      children: _jsxs(View, {\n        style: [styles.smallerContainer],\n        children: [_jsx(CheckBox, {\n          style: [styles.checkBoxStyle, {\n            \"float\": \"left\"\n          }],\n          value: useSelection ? false : true,\n          onClick: updateNoClick\n        }), _jsx(Text, {\n          style: [{\n            \"float\": \"right\"\n          }],\n          children: \" No \"\n        })]\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"inline-block\"\n  },\n  smallContainer: {\n    display: \"inline-block\",\n    borderWidth: 1\n  },\n  smallerContainer: {\n    paddingLeft: \"150px\"\n  },\n  checkBoxStyle: {\n    borderRadius: \"50%\",\n    border: \"2px solid #7f5bc2\",\n    width: \"16px\",\n    height: \"16px\",\n    marginTop: \"-8px\",\n    top: \"50%\",\n    position: \"absolute\",\n    content: \"\"\n  }\n});","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/components/FirstRdv.js"],"names":["React","Component","useState","Item","ViewPropTypes","FirstRdv","props","styles","container","useFirst","setFirst","Appointment","updateYesClick","setSelection","updateNoClick","smallContainer","smallerContainer","checkBoxStyle","useSelection","StyleSheet","create","display","borderWidth","paddingLeft","borderRadius","border","width","height","marginTop","top","position","content"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;SAMEC,I;;;;SAIAC,a;;;AAIF,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,SACI,MAAC,IAAD;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAGE,KAAC,WAAD;AAAa,MAAA,KAAK,EAAEC,MAAM,CAACC,SAA3B;AAAsC,MAAA,QAAQ,EAAEF,KAAK,CAACG,QAAtD;AAAgE,MAAA,QAAQ,EAAEH,KAAK,CAACI;AAAhF,MAHF;AAAA,IADJ;AAOH;AAAA;;AAKD,SAASC,WAAT,CAAqBL,KAArB,EAA4B;AAExB,MAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMC,YAAY,CAAC,IAAD,CAAlB;AAAA,GAAvB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMD,YAAY,CAAC,KAAD,CAAlB;AAAA,GAAtB;;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACD,MAAM,CAACQ,cAAR,EAAwB;AAAC,iBAAS;AAAV,OAAxB,CAAb;AAAA,gBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACR,MAAM,CAACS,gBAAR,CAAb;AAAA,mBACI,KAAC,QAAD;AAAU,UAAA,KAAK,EAAE,CAACT,MAAM,CAACU,aAAR,EAAuB;AAAC,qBAAS;AAAV,WAAvB,CAAjB;AACI,UAAA,KAAK,EAAEC,YAAY,GAAE,IAAF,GAAO,KAD9B;AAEI,UAAA,OAAO,EAAEN;AAFb,UADJ,EAMI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC;AAAC,qBAAS;AAAV,WAAD,CAAb;AAAA;AAAA,UANJ;AAAA;AADJ,MADJ,EAWI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACL,MAAM,CAACQ,cAAR,EAAwB;AAAC,iBAAS;AAAV,OAAxB,CAAb;AAAA,gBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACR,MAAM,CAACS,gBAAR,CAAb;AAAA,mBACI,KAAC,QAAD;AAAU,UAAA,KAAK,EAAE,CAACT,MAAM,CAACU,aAAR,EAAuB;AAAC,qBAAS;AAAV,WAAvB,CAAjB;AACI,UAAA,KAAK,EAAEC,YAAY,GAAE,KAAF,GAAQ,IAD/B;AAEI,UAAA,OAAO,EAAEJ;AAFb,UADJ,EAKI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC;AAAC,qBAAS;AAAV,WAAD,CAAb;AAAA;AAAA,UALJ;AAAA;AADJ,MAXJ;AAAA,IADJ;AAuBH;;AAED,IAAMP,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,OAAO,EAAE;AADF,GADkB;AAI7BN,EAAAA,cAAc,EAAE;AACZM,IAAAA,OAAO,EAAE,cADG;AAEZC,IAAAA,WAAW,EAAE;AAFD,GAJa;AAQ7BN,EAAAA,gBAAgB,EAAE;AACdO,IAAAA,WAAW,EAAE;AADC,GARW;AAW7BN,EAAAA,aAAa,EAAE;AACXO,IAAAA,YAAY,EAAE,KADH;AAEXC,IAAAA,MAAM,EAAE,mBAFG;AAGXC,IAAAA,KAAK,EAAE,MAHI;AAIXC,IAAAA,MAAM,EAAE,MAJG;AAKXC,IAAAA,SAAS,EAAE,MALA;AAMXC,IAAAA,GAAG,EAAE,KANM;AAOXC,IAAAA,QAAQ,EAAE,UAPC;AAQXC,IAAAA,OAAO,EAAE;AARE;AAXc,CAAlB,CAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport {\n  View,\n  Platform,\n  TextInput,\n  FlatList,\n  Item,\n  Text,\n  StyleSheet,\n  CheckBox,\n  ViewPropTypes,\n} from 'react-native';\n\n\nexport default function FirstRdv(props) {\n    return (\n        <View>\n          <Text> Is this your first appointment with this practitioner?\n          </Text>\n          <Appointment style={styles.container} useFirst={props.useFirst} setFirst={props.setFirst} ></Appointment>\n        </View> \n    )\n};\n\n\n// to algin you need parent to have \"inline-block\" and children to be float\n\nfunction Appointment(props) {\n    //const [useSelection, setSelection] = useState(true)\n    const updateYesClick = () => setSelection(true)\n    const updateNoClick = () => setSelection(false)\n    return (\n        <View style={styles.container}>\n            <View style={[styles.smallContainer, {\"float\": \"left\"}]}>\n                <View style={[styles.smallerContainer]}>\n                    <CheckBox style={[styles.checkBoxStyle, {\"float\": \"left\"}]}\n                        value={useSelection? true:false}\n                        onClick={updateYesClick}\n                        >\n                    </CheckBox>\n                    <Text style={[{\"float\": \"right\"}]}> Yes </Text>\n                </View>\n            </View>\n            <View style={[styles.smallContainer, {\"float\": \"left\"}]}>\n                <View style={[styles.smallerContainer]}>\n                    <CheckBox style={[styles.checkBoxStyle, {\"float\": \"left\"}]}\n                        value={useSelection? false:true}\n                        onClick={updateNoClick}\n                    ></CheckBox>\n                    <Text style={[{\"float\": \"right\"}]}> No </Text>\n            </View>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"inline-block\",\n    },\n    smallContainer: {\n        display: \"inline-block\",\n        borderWidth: 1,\n    },\n    smallerContainer: {\n        paddingLeft: \"150px\"\n    },\n    checkBoxStyle: {\n        borderRadius: \"50%\",\n        border: \"2px solid #7f5bc2\",\n        width: \"16px\",\n        height: \"16px\",\n        marginTop: \"-8px\",\n        top: \"50%\",\n        position: \"absolute\",\n        content: \"\",\n    }\n})"]},"metadata":{},"sourceType":"module"}