{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar data = [{\n  \"dayOfTheWeek\": \"MA\",\n  \"day\": \"fevr. 08\",\n  \"timeIntervals\": ['-', '-', '-', '17h30']\n}, {\n  \"dayOfTheWeek\": \"ME\",\n  \"day\": \"fevr 09\",\n  \"timeIntervals\": ['9h00', '-', '-', '-']\n}, {\n  \"dayOfTheWeek\": \"JE\",\n  \"day\": \"fevr. 10\",\n  \"timeIntervals\": ['-', '15h30', '-', '-']\n}];\n\nvar _React$useState = React.useState(data),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    useAgenda = _React$useState2[0],\n    setAgenda = _React$useState2[1];\n\nconsole.log(useAgenda);\nReact.useEffect(function () {\n  getAgenda(defaultQueryArgs).then(function (response) {\n    setAgenda(response);\n  }), [];\n});\nexport default function Calendar(props) {\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      numColumns: 7,\n      data: data,\n      horizontal: false,\n      renderItem: function renderItem(test) {\n        return _jsxs(View, {\n          style: styles.calendar,\n          children: [_jsxs(Text, {\n            style: styles.jour,\n            children: [\" \", test.item.dayOfTheWeek, \" \"]\n          }), _jsxs(Text, {\n            style: styles.date,\n            children: [\" \", test.item.day, \" \"]\n          }), _jsx(Availabilities, {\n            data: test.item.timeIntervals\n          })]\n        });\n      }\n    })\n  });\n}\n\nfunction Availabilities(props) {\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: props.data,\n      horizontal: false,\n      renderItem: function renderItem(test) {\n        return _jsxs(Text, {\n          style: styles.nobooking,\n          children: [\" \", test.item, \" \"]\n        });\n      }\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  date: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: \"#333\",\n    padding: 0\n  },\n  jour: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0\n  },\n  nobooking: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0\n  },\n  calendar: {\n    fontFamily: \"sans-serif\",\n    fontSize: \"12\"\n  }\n});","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/components/Calendar.js"],"names":["React","Component","useState","useEffect","Item","data","useAgenda","setAgenda","console","log","getAgenda","defaultQueryArgs","then","response","Calendar","props","test","styles","calendar","jour","item","dayOfTheWeek","date","day","timeIntervals","Availabilities","nobooking","StyleSheet","create","backgroundColor","borderWidth","borderColor","padding","borderBottomColor","fontFamily","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;SAMEC,I;;;;;AAMF,IAAIC,IAAI,GAAC,CACL;AAAC,kBAAgB,IAAjB;AAAuB,SAAO,UAA9B;AAA0C,mBAAiB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,OAAhB;AAA3D,CADK,EAEL;AAAC,kBAAgB,IAAjB;AAAuB,SAAO,SAA9B;AAA0C,mBAAiB,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB;AAA3D,CAFK,EAGL;AAAC,kBAAgB,IAAjB;AAAuB,SAAO,UAA9B;AAA0C,mBAAiB,CAAC,GAAD,EAAM,OAAN,EAAe,GAAf,EAAoB,GAApB;AAA3D,CAHK,CAAT;;AAKA,sBAA+BL,KAAK,CAACE,QAAN,CAAeG,IAAf,CAA/B;AAAA;AAAA,IAAOC,SAAP;AAAA,IAAkBC,SAAlB;;AACAC,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAN,KAAK,CAACG,SAAN,CAAgB,YAAM;AAEpBO,EAAAA,SAAS,CAACC,gBAAD,CAAT,CAA4BC,IAA5B,CAAiC,UAACC,QAAD,EAAc;AAACN,IAAAA,SAAS,CAACM,QAAD,CAAT;AAAoB,GAApE,GACA,EADA;AAED,CAJD;AAMA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,SACE,KAAC,IAAD;AAAA,cACA,KAAC,QAAD;AACA,MAAA,UAAU,EAAE,CADZ;AAEA,MAAA,IAAI,EAAIV,IAFR;AAIA,MAAA,UAAU,EAAE,KAJZ;AAKA,MAAA,UAAU,EAAE,oBAACW,IAAD,EAAU;AACpB,eACA,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA,qBACA,MAAC,IAAD;AAAM,YAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA,4BAA4BH,IAAI,CAACI,IAAL,CAAUC,YAAtC;AAAA,YADA,EAEA,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA,4BAA4BN,IAAI,CAACI,IAAL,CAAUG,GAAtC;AAAA,YAFA,EAGA,KAAC,cAAD;AAAgB,YAAA,IAAI,EAAEP,IAAI,CAACI,IAAL,CAAUI;AAAhC,YAHA;AAAA,UADA;AAOD;AAbD;AADA,IADF;AAmBH;;AAED,SAASC,cAAT,CAAwBV,KAAxB,EAA+B;AAC7B,SACE,KAAC,IAAD;AAAA,cACA,KAAC,QAAD;AACA,MAAA,IAAI,EAAEA,KAAK,CAACV,IADZ;AAEA,MAAA,UAAU,EAAE,KAFZ;AAGA,MAAA,UAAU,EAAE,oBAACW,IAAD,EAAU;AACpB,eACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACS,SAApB;AAAA,0BAAiCV,IAAI,CAACI,IAAtC;AAAA,UADF;AAGD;AAPD;AADA,IADF;AAcD;;AAED,IAAMH,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AACJO,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJC,IAAAA,WAAW,EAAE,MAHT;AAIJC,IAAAA,OAAO,EAAE;AAJL,GADyB;AAO/Bb,EAAAA,IAAI,EAAE;AACJU,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,WAAW,EAAE,CAFT;AAGJG,IAAAA,iBAAiB,EAAE,KAHf;AAIJF,IAAAA,WAAW,EAAE,MAJT;AAKJC,IAAAA,OAAO,EAAE;AALL,GAPyB;AAc/BN,EAAAA,SAAS,EAAE;AACTG,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGTG,IAAAA,iBAAiB,EAAE,KAHV;AAITF,IAAAA,WAAW,EAAE,MAJJ;AAKTC,IAAAA,OAAO,EAAE;AALA,GAdoB;AAqB/Bd,EAAAA,QAAQ,EAAE;AACRgB,IAAAA,UAAU,EAAE,YADJ;AAERC,IAAAA,QAAQ,EAAE;AAFF;AArBqB,CAAlB,CAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport {\n  View,\n  Platform,\n  TextInput,\n  FlatList,\n  Item,\n  Text,\n  StyleSheet\n} from 'react-native';\n\n// API CALL\nlet data=[\n    {\"dayOfTheWeek\": \"MA\", \"day\": \"fevr. 08\", \"timeIntervals\": ['-', '-', '-', '17h30']}, \n    {\"dayOfTheWeek\": \"ME\", \"day\": \"fevr 09\",  \"timeIntervals\": ['9h00', '-', '-', '-']}, \n    {\"dayOfTheWeek\": \"JE\", \"day\": \"fevr. 10\", \"timeIntervals\": ['-', '15h30', '-', '-']}\n    ];\nconst [useAgenda, setAgenda] = React.useState(data)\nconsole.log(useAgenda);\nReact.useEffect(() => {\n  //setAgenda(data),\n  getAgenda(defaultQueryArgs).then((response) => {setAgenda(response)}),\n  []\n});\n\nexport default function Calendar(props) {\n    return (\n      <View>\n      <FlatList\n      numColumns={7}\n      data = {data}\n      //data = {props.data}\n      horizontal={false}\n      renderItem={(test) => {\n        return (\n        <View style={styles.calendar}>\n        <Text style={styles.jour}> {test.item.dayOfTheWeek} </Text>\n        <Text style={styles.date}> {test.item.day} </Text>\n        <Availabilities data={test.item.timeIntervals}/>\n        </View>\n        )\n      }}\n      />\n      </View>\n      )\n}\n\nfunction Availabilities(props) {\n  return (\n    <View>\n    <FlatList\n    data={props.data}\n    horizontal={false}\n    renderItem={(test) => {\n      return (\n        <Text style={styles.nobooking}> {test.item} </Text>\n      )\n    }}\n    >\n    </FlatList>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  date: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: \"#333\",\n    padding: 0,\n  },\n  jour: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n  },\n  nobooking: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n  },\n  calendar: {\n    fontFamily: \"sans-serif\",\n    fontSize: \"12\"\n  }\n});"]},"metadata":{},"sourceType":"module"}