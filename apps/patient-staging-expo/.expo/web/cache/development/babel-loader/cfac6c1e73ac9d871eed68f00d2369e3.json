{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Calendar(props) {\n  var setSelectedTime = props.setTime;\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      numColumns: 7,\n      data: props.data,\n      horizontal: false,\n      renderItem: function renderItem(test) {\n        return _jsxs(View, {\n          style: styles.calendar,\n          children: [_jsxs(Text, {\n            style: styles.jour,\n            children: [\" \", test.item.dayOfTheWeek, \" \"]\n          }), _jsxs(Text, {\n            style: styles.date,\n            children: [\" \", test.item.dayMonth, \" \"]\n          }), _jsx(Availabilities, {\n            data: test.item.timeIntervals,\n            setTime: setSelectedTime\n          })]\n        });\n      }\n    })\n  });\n}\n\nfunction Availabilities(props) {\n  var _useState = useState(\"blue\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      useButtonColor = _useState2[0],\n      setButtonColor = _useState2[1];\n\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: props.data,\n      horizontal: false,\n      renderItem: function renderItem(test) {\n        if (test.item == '-') {\n          return _jsx(View, {\n            style: styles.optionContainer,\n            children: _jsxs(Text, {\n              style: styles.nobooking,\n              children: [\" \", test.item, \" \"]\n            })\n          });\n        } else {\n          return _jsx(View, {\n            style: styles.optionContainer,\n            children: _jsx(Button, {\n              title: test.item,\n              style: {\n                fontSize: \"5px\"\n              },\n              onPress: function onPress() {\n                props.setTime(test.item);\n              },\n              children: \" \"\n            })\n          });\n        }\n      }\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  date: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: \"#333\",\n    padding: 0,\n    fontSize: \"10px\",\n    fontWeight: \"bolder\"\n  },\n  jour: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n    fontSize: \"10px\"\n  },\n  nobooking: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n    textAlign: \"center\"\n  },\n  calendar: {\n    fontFamily: \"sans-serif\"\n  },\n  buttonStyle: {\n    fontSize: \"9px\"\n  },\n  textStyle: {\n    textAlign: \"center\"\n  },\n  optionContainer: {\n    \"height\": \"30px\"\n  }\n});","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/components/Calendar.js"],"names":["React","Component","useState","useEffect","Item","Calendar","props","setSelectedTime","setTime","data","test","styles","calendar","jour","item","dayOfTheWeek","date","dayMonth","timeIntervals","Availabilities","useButtonColor","setButtonColor","optionContainer","nobooking","fontSize","StyleSheet","create","backgroundColor","borderWidth","borderColor","padding","fontWeight","borderBottomColor","textAlign","fontFamily","buttonStyle","textStyle"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport {\n  View,\n  Platform,\n  TextInput,\n  FlatList,\n  Item,\n  Text,\n  StyleSheet,\n  Button\n} from 'react-native';\n\n// API CALL\n\nexport default function Calendar(props) {\n  const setSelectedTime = props.setTime\n    return (\n      <View>\n      <FlatList\n      numColumns={7}\n      data = {props.data}\n      horizontal={false}\n      renderItem={(test) => {\n        return (\n        <View style={styles.calendar}>\n        <Text style={styles.jour}> {test.item.dayOfTheWeek} </Text>\n        <Text style={styles.date}> {test.item.dayMonth} </Text>\n        <Availabilities data={test.item.timeIntervals} setTime={setSelectedTime}/>\n        </View>\n        )\n      }}\n      />\n      </View>\n      )\n}\n\nfunction Availabilities(props) {\n  const [useButtonColor, setButtonColor] = useState(\"blue\")\n  return (\n    <View>\n    <FlatList\n    data={props.data}\n    horizontal={false}\n    renderItem={(test) => {\n      if (test.item == '-') {\n        return (\n          <View style={styles.optionContainer}>\n            <Text style={styles.nobooking}> {test.item} </Text>\n          </View>\n        )\n      }\n      else {\n        return (\n          <View style={styles.optionContainer}>\n          <Button title={test.item} style={{fontSize: \"5px\"}} onPress={() => {props.setTime(test.item);}}> </Button>\n          </View>\n        )\n      }\n    }}\n    >\n    </FlatList>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  date: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: \"#333\",\n    padding: 0,\n    fontSize: \"10px\",\n    fontWeight: \"bolder\",\n  },\n  jour: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n    fontSize: \"10px\",\n  },\n  nobooking: {\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderBottomColor: \"red\",\n    borderColor: \"#333\",\n    padding: 0,\n    textAlign: \"center\",\n  },\n  calendar: {\n    fontFamily: \"sans-serif\",\n  },\n  buttonStyle: {\n    fontSize: \"9px\",\n  },\n  textStyle: {\n    textAlign: \"center\"\n  },\n  optionContainer: {\n    \"height\": \"30px\"\n  },\n});"]},"metadata":{},"sourceType":"module"}