{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FirstRdv(props) {\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.questionText,\n      children: \" Is this your first appointment with this practitioner?\"\n    }), _jsx(Appointment, {\n      style: styles.container,\n      useState: props.useState\n    })]\n  });\n}\n;\n\nfunction Appointment(props) {\n  var _props$useState = _slicedToArray(props.useState, 2),\n      useSelection = _props$useState[0],\n      setSelection = _props$useState[1];\n\n  var updateYesClick = function updateYesClick() {\n    return setSelection(true);\n  };\n\n  var updateNoClick = function updateNoClick() {\n    return setSelection(false);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: [styles.smallContainer, {\n        \"float\": \"left\"\n      }],\n      children: _jsxs(View, {\n        style: [styles.smallerContainer],\n        children: [_jsx(CheckBox, {\n          style: [styles.checkBoxStyle, {\n            \"float\": \"left\"\n          }],\n          value: useSelection ? true : false,\n          onClick: updateYesClick\n        }), _jsx(Text, {\n          style: [],\n          children: \" Yes \"\n        })]\n      })\n    }), _jsx(View, {\n      style: [styles.smallContainer, {\n        \"float\": \"left\"\n      }],\n      children: _jsxs(View, {\n        style: [styles.smallerContainer],\n        children: [_jsx(CheckBox, {\n          style: [styles.checkBoxStyle, {\n            \"float\": \"left\"\n          }],\n          value: useSelection ? false : true,\n          onClick: updateNoClick\n        }), _jsx(Text, {\n          style: [],\n          children: \" No \"\n        })]\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"inline-block\",\n    minWidth: \"150px\"\n  },\n  smallContainer: {\n    padding: \"3px\",\n    display: \"inline-block\",\n    borderWidth: 1,\n    minWidth: \"150px\"\n  },\n  smallerContainer: {\n    display: \"inline-block\",\n    margin: \"auto\",\n    minWidth: \"150px\",\n    marginLeft: \"10px\"\n  },\n  checkBoxStyle: {},\n  questionText: {\n    marginBottom: \"5px\",\n    fontFamily: \"Roboto,-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif\"\n  }\n});","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/components/FirstRdv.js"],"names":["React","Component","useState","Item","ViewPropTypes","FirstRdv","props","styles","questionText","container","Appointment","useSelection","setSelection","updateYesClick","updateNoClick","smallContainer","smallerContainer","checkBoxStyle","StyleSheet","create","display","minWidth","padding","borderWidth","margin","marginLeft","marginBottom","fontFamily"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport {\n  View,\n  Platform,\n  TextInput,\n  FlatList,\n  Item,\n  Text,\n  StyleSheet,\n  CheckBox,\n  ViewPropTypes,\n} from 'react-native';\n\n\nexport default function FirstRdv(props) {\n    return (\n        <View>\n          <Text style={styles.questionText}> Is this your first appointment with this practitioner?\n          </Text>\n          <Appointment style={styles.container} useState={props.useState}></Appointment>\n        </View> \n    )\n};\n\n\n// to algin you need parent to have \"inline-block\" and children to be float\n\nfunction Appointment(props) {\n    const [useSelection, setSelection] = props.useState\n    const updateYesClick = () => setSelection(true)\n    const updateNoClick = () => setSelection(false)\n    return (\n        <View style={styles.container}>\n            <View style={[styles.smallContainer, {\"float\": \"left\"}]}>\n                <View style={[styles.smallerContainer]}>\n                    <CheckBox style={[styles.checkBoxStyle, {\"float\": \"left\"}]}\n                        value={useSelection? true:false}\n                        onClick={updateYesClick}\n                        >\n                    </CheckBox>\n                    <Text style={[]}> Yes </Text>\n                </View>\n            </View>\n            <View style={[styles.smallContainer, {\"float\": \"left\"}]}>\n                <View style={[styles.smallerContainer]}>\n                    <CheckBox style={[styles.checkBoxStyle, {\"float\": \"left\"}]}\n                        value={useSelection? false:true}\n                        onClick={updateNoClick}\n                    ></CheckBox>\n                    <Text style={[]}> No </Text>\n            </View>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"inline-block\",\n        minWidth: \"150px\",\n    },\n    smallContainer: {\n        padding: \"3px\",\n        display: \"inline-block\",\n        borderWidth: 1,\n        minWidth: \"150px\",\n    },\n    smallerContainer: {\n        //paddingLeft: \"150px\"\n        display: \"inline-block\",\n        //display: \"flex\",\n        margin: \"auto\",\n        minWidth: \"150px\",\n        marginLeft: \"10px\",\n    },\n    checkBoxStyle: {\n        //borderRadius: \"50%\",\n        //border: \"2px solid #7f5bc2\",\n        //width: \"16px\",\n        //height: \"16px\",\n        //marginTop: \"-8px\",\n        //top: \"50%\",\n        //position: \"absolute\",\n        //content: \"\",\n    },\n    questionText: {\n        marginBottom: \"5px\",\n        fontFamily: \"Roboto,-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif\",\n    },\n})"]},"metadata":{},"sourceType":"module"}