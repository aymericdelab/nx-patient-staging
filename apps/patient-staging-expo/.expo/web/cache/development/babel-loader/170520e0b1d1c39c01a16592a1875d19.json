{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport Calendar from \"./components/Calendar.js\";\nimport FirstRdv from \"./components/FirstRdv.js\";\nimport DropDown from \"./components/DropDown.js\";\nimport getAgenda, { defaultQueryArgs } from \"./network/calendarAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [{\n  \"dayOfTheWeek\": \"MA\",\n  \"day\": \"fevr. 08\",\n  \"timeIntervals\": ['-', '-', '-', '17h30']\n}, {\n  \"dayOfTheWeek\": \"ME\",\n  \"day\": \"fevr 09\",\n  \"timeIntervals\": ['9h00', '-', '-', '-']\n}, {\n  \"dayOfTheWeek\": \"JE\",\n  \"day\": \"fevr. 10\",\n  \"timeIntervals\": ['-', '15h30', '-', '-']\n}];\nexport default function App() {\n  var _React$useState = React.useState([{\n    \"dayOfTheWeek\": \"\",\n    \"day\": \"\",\n    \"timeIntervals\": ['']\n  }]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      useAgenda = _React$useState2[0],\n      setAgenda = _React$useState2[1];\n\n  var _React$useState3 = React.useState('no_selection'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      useSelectedTime = _React$useState4[0],\n      setSelectedTime = _React$useState4[1];\n\n  React.useEffect(function () {\n    getAgenda(defaultQueryArgs).then(function (response) {\n      setAgenda(response);\n      console.log(response);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.bigContainer,\n    children: _jsxs(View, {\n      style: styles.smallContainer,\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          children: \" Find availability \"\n        })\n      }), _jsx(FirstRdv, {}), _jsx(View, {\n        children: _jsx(DropDown, {})\n      }), _jsx(Calendar, {\n        data: useAgenda,\n        setTime: setSelectedTime\n      }), _jsx(View, {\n        children: _jsx(Button, {\n          variant: \"text\",\n          getTime: useS,\n          title: \"Book Appointment\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  bigContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#FCF7F2',\n    padding: 8\n  },\n  smallContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#FFFFFF',\n    padding: 8\n  }\n});","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/App.tsx"],"names":["React","Constants","Calendar","FirstRdv","DropDown","getAgenda","defaultQueryArgs","data","App","useState","useAgenda","setAgenda","useSelectedTime","setSelectedTime","useEffect","then","response","console","log","styles","bigContainer","smallContainer","useS","StyleSheet","create","flex","justifyContent","alignItems","paddingTop","statusBarHeight","backgroundColor","padding"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AAGA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AAEA,OAAOC,SAAP,IAAmBC,gBAAnB;;;AAGA,IAAIC,IAAI,GAAC,CACL;AAAC,kBAAgB,IAAjB;AAAuB,SAAO,UAA9B;AAA0C,mBAAiB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,OAAhB;AAA3D,CADK,EAEL;AAAC,kBAAgB,IAAjB;AAAuB,SAAO,SAA9B;AAA0C,mBAAiB,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB;AAA3D,CAFK,EAGL;AAAC,kBAAgB,IAAjB;AAAuB,SAAO,UAA9B;AAA0C,mBAAiB,CAAC,GAAD,EAAM,OAAN,EAAe,GAAf,EAAoB,GAApB;AAA3D,CAHK,CAAT;AAMA,eAAe,SAASC,GAAT,GAAe;AAE1B,wBAA+BR,KAAK,CAACS,QAAN,CAAe,CAAC;AAAC,oBAAgB,EAAjB;AAAqB,WAAO,EAA5B;AAAgC,qBAAiB,CAAC,EAAD;AAAjD,GAAD,CAAf,CAA/B;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,SAAlB;;AAEA,yBAA2CX,KAAK,CAACS,QAAN,CAAe,cAAf,CAA3C;AAAA;AAAA,MAAOG,eAAP;AAAA,MAAwBC,eAAxB;;AAEAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AAEpBT,IAAAA,SAAS,CAACC,gBAAD,CAAT,CAA4BS,IAA5B,CAAiC,UAACC,QAAD,EAAmB;AAACL,MAAAA,SAAS,CAACK,QAAD,CAAT;AAAqBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAAsB,KAAhG;AACD,GAHD,EAGG,EAHH;AAIF,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,YAApB;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,iBACE,KAAC,IAAD;AAAA,kBACE,KAAC,IAAD;AAAA;AAAA;AADF,QADF,EAIE,KAAC,QAAD,KAJF,EAKE,KAAC,IAAD;AAAA,kBACE,KAAC,QAAD;AADF,QALF,EAQE,KAAC,QAAD;AAAU,QAAA,IAAI,EAAEX,SAAhB;AAA2B,QAAA,OAAO,EAAEG;AAApC,QARF,EASE,KAAC,IAAD;AAAA,kBACE,KAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAES,IAAhC;AAAsC,UAAA,KAAK,EAAC;AAA5C;AADF,QATF;AAAA;AADF,IADF;AAiBD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,YAAY,EAAE;AACZK,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,cAAc,EAAE,QAFJ;AAGZC,IAAAA,UAAU,EAAE,QAHA;AAIZC,IAAAA,UAAU,EAAE3B,SAAS,CAAC4B,eAJV;AAKZC,IAAAA,eAAe,EAAE,SALL;AAMZC,IAAAA,OAAO,EAAE;AANG,GADiB;AAS/BV,EAAAA,cAAc,EAAE;AACdI,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,QAHE;AAIdC,IAAAA,UAAU,EAAE3B,SAAS,CAAC4B,eAJR;AAKdC,IAAAA,eAAe,EAAE,SALH;AAMdC,IAAAA,OAAO,EAAE;AANK;AATe,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport Constants from 'expo-constants';\n\n// or any pure javascript modules available in npm\nimport Calendar from './components/Calendar.js'\nimport FirstRdv from './components/FirstRdv.js';\nimport DropDown from './components/DropDown.js';\n\nimport getAgenda, {defaultQueryArgs} from './network/calendarAPI'\n    \n//// dummy data\nlet data=[\n    {\"dayOfTheWeek\": \"MA\", \"day\": \"fevr. 08\", \"timeIntervals\": ['-', '-', '-', '17h30']}, \n    {\"dayOfTheWeek\": \"ME\", \"day\": \"fevr 09\",  \"timeIntervals\": ['9h00', '-', '-', '-']}, \n    {\"dayOfTheWeek\": \"JE\", \"day\": \"fevr. 10\", \"timeIntervals\": ['-', '15h30', '-', '-']}\n    ];\n\nexport default function App() {\n    // use state to define getter and setter for calendar data\n    const [useAgenda, setAgenda] = React.useState([{\"dayOfTheWeek\": \"\", \"day\": \"\", \"timeIntervals\": ['']}])\n    // use state to define and use selected time by the user\n    const [useSelectedTime, setSelectedTime] = React.useState('no_selection')\n    // use effect to avoid calling api at each render \n    React.useEffect(() => {\n      //setAgenda(data)\n      getAgenda(defaultQueryArgs).then((response: any) => {setAgenda(response); console.log(response)})\n    }, []);\n  return (\n    <View style={styles.bigContainer}>\n      <View style={styles.smallContainer}>\n        <View>\n          <Text> Find availability </Text>\n        </View> \n        <FirstRdv></FirstRdv>\n        <View>\n          <DropDown></DropDown>\n        </View> \n        <Calendar data={useAgenda} setTime={setSelectedTime}></Calendar>\n        <View>\n          <Button variant=\"text\" getTime={useS} title=\"Book Appointment\"/>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  bigContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#FCF7F2',\n    padding: 8,\n  },\n  smallContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#FFFFFF',\n    padding: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}