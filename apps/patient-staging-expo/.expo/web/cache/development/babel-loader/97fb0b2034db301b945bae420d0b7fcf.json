{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FirstRdv(props) {\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \" Is this your first appointment with this practitioner?\"\n    }), _jsx(Appointment, {\n      style: styles.container\n    })]\n  });\n}\n;\n\nfunction Appointment(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      useSelection = _useState2[0],\n      setSelection = _useState2[1];\n\n  var updateOnClick = function updateOnClick() {\n    return setSelection(!useSelection);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: [styles.checkBoxStyle, {\n        \"float\": \"left\"\n      }],\n      children: [_jsx(CheckBox, {\n        style: [{\n          \"float\": \"left\"\n        }]\n      }), _jsx(Text, {\n        style: [{\n          \"float\": \"right\"\n        }],\n        children: \" Yes \"\n      })]\n    }), _jsxs(View, {\n      style: [styles.checkBoxStyle, {\n        \"float\": \"right\"\n      }],\n      children: [_jsx(CheckBox, {\n        style: [{\n          \"float\": \"left\"\n        }]\n      }), _jsx(Text, {\n        style: [{\n          \"float\": \"right\"\n        }],\n        children: \" No \"\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"inline-block\"\n  },\n  checkBoxStyle: {\n    display: \"inline-block\"\n  }\n});","map":{"version":3,"sources":["/Users/aymericdelabrousse/Documents/git/nx_expo/rosa-nx-expo-workspace/apps/patient-staging-expo/components/FirstRdv.js"],"names":["React","Component","Item","ViewPropTypes","FirstRdv","props","styles","container","Appointment","useState","useSelection","setSelection","updateOnClick","checkBoxStyle","StyleSheet","create","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;SAMEC,I;;;;SAIAC,a;;;AAIF,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,SACI,MAAC,IAAD;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAGE,KAAC,WAAD;AAAa,MAAA,KAAK,EAAEC,MAAM,CAACC;AAA3B,MAHF;AAAA,IADJ;AAOH;AAAA;;AAKD,SAASC,WAAT,CAAqBH,KAArB,EAA4B;AACxB,kBAAqCI,QAAQ,CAAC,KAAD,CAA7C;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,YAArB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMD,YAAY,CAAC,CAACD,YAAF,CAAlB;AAAA,GAAtB;;AACA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACC,SAApB;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACD,MAAM,CAACO,aAAR,EAAuB;AAAC,iBAAS;AAAV,OAAvB,CAAb;AAAA,iBACI,KAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAC;AAAC,mBAAS;AAAV,SAAD;AAAjB,QADJ,EAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC;AAAC,mBAAS;AAAV,SAAD,CAAb;AAAA;AAAA,QAFJ;AAAA,MADJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACP,MAAM,CAACO,aAAR,EAAuB;AAAC,iBAAS;AAAV,OAAvB,CAAb;AAAA,iBACI,KAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAC;AAAC,mBAAS;AAAV,SAAD;AAAjB,QADJ,EAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC;AAAC,mBAAS;AAAV,SAAD,CAAb;AAAA;AAAA,QAFJ;AAAA,MALJ;AAAA,IADJ;AAaH;;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,OAAO,EAAE;AADF,GADkB;AAI7BH,EAAAA,aAAa,EAAE;AACXG,IAAAA,OAAO,EAAE;AADE;AAJc,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  Platform,\n  TextInput,\n  FlatList,\n  Item,\n  Text,\n  StyleSheet,\n  CheckBox,\n  ViewPropTypes,\n} from 'react-native';\n\n\nexport default function FirstRdv(props) {\n    return (\n        <View>\n          <Text> Is this your first appointment with this practitioner?\n          </Text>\n          <Appointment style={styles.container}></Appointment>\n        </View> \n    )\n};\n\n\n// to algin you need parent to have \"inline-block\" and children to be float\n\nfunction Appointment(props) {\n    const [useSelection, setSelection] = useState(false)\n    const updateOnClick = () => setSelection(!useSelection)\n    return (\n        <View style={styles.container}>\n            <View style={[styles.checkBoxStyle, {\"float\": \"left\"}]}>\n                <CheckBox style={[{\"float\": \"left\"}]}></CheckBox>\n                <Text style={[{\"float\": \"right\"}]}> Yes </Text>\n            </View>\n            <View style={[styles.checkBoxStyle, {\"float\": \"right\"}]}>\n                <CheckBox style={[{\"float\": \"left\"}]}></CheckBox>\n                <Text style={[{\"float\": \"right\"}]}> No </Text>\n            </View>\n        </View>\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"inline-block\",\n    },\n    checkBoxStyle: {\n        display: \"inline-block\",\n    } \n})"]},"metadata":{},"sourceType":"module"}